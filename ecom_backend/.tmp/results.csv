Test,File,Status,Duration (ms),Error Message,Error Stack
AdminController Blackbox Tests › GET /admin/data › should return 400 when the table query parameter is missing,,passed,34,,
AdminController Blackbox Tests › GET /admin/data › should return 400 when the table query parameter is invalid,,passed,8,,
"AdminController Blackbox Tests › GET /admin/data › should return admin data correctly when table parameter is ""Admin""",,passed,9,,
AdminController Blackbox Tests › GET /admin/data › should return non-admin table data when a valid table parameter is provided,,passed,5,,
AdminController Blackbox Tests › GET /admin/data › should return 500 if db.query throws an error,,passed,11,,
AdminController Blackbox Tests › PUT /admin/data › should return 400 when the table query parameter is missing,,passed,24,,
AdminController Blackbox Tests › PUT /admin/data › should return 400 when data is missing or not an array,,passed,5,,
AdminController Blackbox Tests › PUT /admin/data › should process update requests correctly,,passed,7,,
AdminController Blackbox Tests › PUT /admin/data › should return 500 if db.query throws an error during update,,passed,8,,
Certificate Controller Blackbox Tests › should return 400 if any required certificate data is missing,,passed,7,,
Certificate Controller Blackbox Tests › should email certificate successfully,,passed,7,,
Certificate Controller Blackbox Tests › should return 500 if an error occurs during certificate emailing,,passed,7,,
Feedback Controller Blackbox Tests › GET /contactusfeedback › should return all feedback,,passed,6,,
Feedback Controller Blackbox Tests › GET /contactusfeedback › should return 500 if an error occurs,,passed,7,,
Feedback Controller Blackbox Tests › GET /contactusfeedback/:id › should return feedback by id,,passed,6,,
Feedback Controller Blackbox Tests › GET /contactusfeedback/:id › should return 404 if feedback is not found,,passed,6,,
Feedback Controller Blackbox Tests › GET /contactusfeedback/:id › should return 500 on error,,passed,7,,
Feedback Controller Blackbox Tests › POST /contactusfeedback › should create feedback successfully,,passed,7,,
Feedback Controller Blackbox Tests › POST /contactusfeedback › should return 500 on error,,passed,7,,
Feedback Controller Blackbox Tests › PUT /contactusfeedback/:id › should update feedback successfully,,passed,6,,
Feedback Controller Blackbox Tests › PUT /contactusfeedback/:id › should return 500 on error,,passed,7,,
Feedback Controller Blackbox Tests › DELETE /contactusfeedback/:id › should delete feedback successfully,,passed,6,,
Feedback Controller Blackbox Tests › DELETE /contactusfeedback/:id › should return 500 on error,,passed,6,,
Course Controller Blackbox Tests › GET /getAllCourses › should return courses filtered by keyword,,passed,6,,
Course Controller Blackbox Tests › GET /getAllCourses › should return 500 on error,,passed,5,,
Course Controller Blackbox Tests › GET /getCourse/:id › should return course data if found,,passed,5,,
Course Controller Blackbox Tests › GET /getCourse/:id › should return 404 if course not found,,passed,5,,
Course Controller Blackbox Tests › GET /getCourse/:id › should return 500 on error,,passed,5,,
Course Controller Blackbox Tests › POST /createCourse › should create a course successfully,,passed,6,,
Course Controller Blackbox Tests › POST /createCourse › should return 500 on error,,passed,6,,
Course Controller Blackbox Tests › PUT /updateCourse/:id › should update a course successfully,,passed,5,,
Course Controller Blackbox Tests › PUT /updateCourse/:id › should return 500 on error,,passed,6,,
Course Controller Blackbox Tests › DELETE /deleteCourse/:id › should return 400 if creator_id is missing,,passed,4,,
Course Controller Blackbox Tests › DELETE /deleteCourse/:id › should delete a course successfully,,passed,7,,
Course Controller Blackbox Tests › DELETE /deleteCourse/:id › should return 404 if course not found or not authorized,,passed,5,,
Course Controller Blackbox Tests › DELETE /deleteCourse/:id › should return 500 on error,,passed,9,,
Course Controller Blackbox Tests › GET /providerCourses › should return provider courses when creator_id is provided,,passed,6,,
Course Controller Blackbox Tests › GET /providerCourses › should return 400 if creator_id is missing,,passed,3,,
Course Controller Blackbox Tests › GET /providerCourses › should return 500 on error,,passed,6,,
Course Controller Blackbox Tests › GET /courseEnrolledStudents › should return enrolled students for a course,,passed,7,,
Course Controller Blackbox Tests › GET /courseEnrolledStudents › should return 400 if courseId is missing,,passed,4,,
Course Controller Blackbox Tests › GET /courseEnrolledStudents › should return 500 on error,,passed,5,,
Course Controller Blackbox Tests › GET /providerEnrollments › should return enrolled students for provider,,passed,7,,
Course Controller Blackbox Tests › GET /providerEnrollments › should return 400 if creator_id is missing,,passed,4,,
Course Controller Blackbox Tests › GET /providerEnrollments › should return 500 on error,,passed,9,,
Course Controller Blackbox Tests › POST /courseModule › should add a course module successfully,,passed,7,,
Course Controller Blackbox Tests › POST /courseModule › should return 500 on error,,passed,7,,
Course Controller Blackbox Tests › GET /courseModules › should return course modules,,passed,6,,
Course Controller Blackbox Tests › GET /courseModules › should return 400 if course_id is missing,,passed,5,,
Course Controller Blackbox Tests › GET /courseModules › should return 500 on error,,passed,7,,
Course Controller Blackbox Tests › PUT /courseModule/:module_id › should update a course module successfully,,passed,5,,
Course Controller Blackbox Tests › PUT /courseModule/:module_id › should return 404 if module not found or not updated,,passed,6,,
Course Controller Blackbox Tests › PUT /courseModule/:module_id › should return 500 on error,,passed,8,,
CourseEnrollmentController Blackbox Tests › GET /courses/:courseId/enrollments › should return all enrollments,,passed,7,,
CourseEnrollmentController Blackbox Tests › GET /courses/:courseId/enrollments › should return 500 on error,,passed,7,,
CourseEnrollmentController Blackbox Tests › GET /courses/:courseId/enrollments/:enrollmentId › should return enrollment by id if found,,passed,6,,
CourseEnrollmentController Blackbox Tests › GET /courses/:courseId/enrollments/:enrollmentId › should return 404 if enrollment not found,,passed,7,,
CourseEnrollmentController Blackbox Tests › GET /courses/:courseId/enrollments/:enrollmentId › should return 500 on error,,passed,9,,
CourseEnrollmentController Blackbox Tests › GET /courses/:courseId/enrollment-check › should return enrollment status,,passed,9,,
CourseEnrollmentController Blackbox Tests › GET /courses/:courseId/enrollment-check › should return 500 on error,,passed,10,,
CourseEnrollmentController Blackbox Tests › POST /courses/:courseId/enrollments › should create an enrollment successfully,,passed,5,,
CourseEnrollmentController Blackbox Tests › POST /courses/:courseId/enrollments › should return 500 on error,,passed,6,,
CourseEnrollmentController Blackbox Tests › PUT /courses/:courseId/enrollments/:enrollmentId › should update an enrollment successfully,,passed,5,,
CourseEnrollmentController Blackbox Tests › PUT /courses/:courseId/enrollments/:enrollmentId › should return 500 on error,,passed,5,,
CourseEnrollmentController Blackbox Tests › DELETE /courses/:courseId/enrollments/:enrollmentId › should delete an enrollment successfully,,passed,5,,
CourseEnrollmentController Blackbox Tests › DELETE /courses/:courseId/enrollments/:enrollmentId › should return 500 on error,,passed,5,,
CourseModuleController Blackbox Tests › GET /courses/:courseId/modules › should return all modules for the given course,,passed,7,,
CourseModuleController Blackbox Tests › GET /courses/:courseId/modules › should return 500 on error,,passed,7,,
CourseModuleController Blackbox Tests › GET /courses/:courseId/modules/:moduleId › should return module data if found,,passed,7,,
CourseModuleController Blackbox Tests › GET /courses/:courseId/modules/:moduleId › should return 404 if module not found,,passed,6,,
CourseModuleController Blackbox Tests › GET /courses/:courseId/modules/:moduleId › should return 500 on error,,passed,9,,
CourseModuleController Blackbox Tests › POST /courses/:courseId/modules › should create a new module and return 201,,passed,10,,
CourseModuleController Blackbox Tests › POST /courses/:courseId/modules › should return 500 on error,,passed,9,,
CourseModuleController Blackbox Tests › PUT /courses/:courseId/modules/:moduleId › should update a module and return 200,,passed,7,,
CourseModuleController Blackbox Tests › PUT /courses/:courseId/modules/:moduleId › should return 500 on error,,passed,10,,
CourseModuleController Blackbox Tests › DELETE /courses/:courseId/modules/:moduleId › should delete a module and return 200,,passed,6,,
CourseModuleController Blackbox Tests › DELETE /courses/:courseId/modules/:moduleId › should return 500 on error,,passed,9,,
CourseReviewController Blackbox Tests › GET /courses/:courseId/reviews › should return reviews for the given course (with query),,passed,7,,
CourseReviewController Blackbox Tests › GET /courses/:courseId/reviews › should return reviews using the /courses/reviews endpoint,,passed,9,,
CourseReviewController Blackbox Tests › GET /courses/:courseId/reviews › should return 500 on error,,passed,8,,
CourseReviewController Blackbox Tests › GET /courses/:courseId/reviews/:reviewId › should return review data if found,,passed,7,,
CourseReviewController Blackbox Tests › GET /courses/:courseId/reviews/:reviewId › should return 404 if review is not found,,passed,6,,
CourseReviewController Blackbox Tests › GET /courses/:courseId/reviews/:reviewId › should return 500 on error,,passed,5,,
CourseReviewController Blackbox Tests › POST /courses/:courseId/reviews › should create a review successfully using courseId in path,,passed,6,,
CourseReviewController Blackbox Tests › POST /courses/:courseId/reviews › should create a review successfully using /courses/reviews endpoint,,passed,5,,
CourseReviewController Blackbox Tests › POST /courses/:courseId/reviews › should return 500 on error,,passed,6,,
CourseReviewController Blackbox Tests › PUT /courses/reviews/:reviewId › should update a review successfully,,passed,6,,
CourseReviewController Blackbox Tests › PUT /courses/reviews/:reviewId › should return 500 on error,,passed,6,,
CourseReviewController Blackbox Tests › DELETE /courses/reviews/:reviewId › should delete a review successfully,,passed,6,,
CourseReviewController Blackbox Tests › DELETE /courses/reviews/:reviewId › should return 500 on error,,passed,5,,
AdminController › getAdminTableData › should return 400 if the table query parameter is missing,,passed,2,,
AdminController › getAdminTableData › should return 400 if the table query parameter is invalid,,passed,1,,
AdminController › getAdminTableData › should query admin data correctly for Admin table,,passed,2,,
AdminController › getAdminTableData › should query non-admin table correctly,,passed,1,,
AdminController › getAdminTableData › should return 500 if db.query throws an error,,passed,2,,
AdminController › updateAdminTableData › should return 400 if the table query parameter is missing,,passed,1,,
AdminController › updateAdminTableData › should return 400 if data is missing or not an array,,passed,1,,
AdminController › updateAdminTableData › should process update requests correctly,,passed,1,,
AdminController › updateAdminTableData › should return 500 if any db.query throws an error during update,,passed,2,,
Certificate Controller Whitebox Tests › emailCertificate › should return 400 if required certificate data is missing,,passed,1,,
Certificate Controller Whitebox Tests › emailCertificate › should email certificate successfully,,passed,1,,
Certificate Controller Whitebox Tests › emailCertificate › should return 500 if an error occurs during certificate emailing,,passed,2,,
Feedback Controller Whitebox Tests › getAllFeedback › should return all feedback,,passed,1,,
Feedback Controller Whitebox Tests › getAllFeedback › should return 500 if an error occurs,,passed,2,,
Feedback Controller Whitebox Tests › getFeedbackById › should return feedback if found,,passed,1,,
Feedback Controller Whitebox Tests › getFeedbackById › should return 404 if feedback not found,,passed,0,,
Feedback Controller Whitebox Tests › getFeedbackById › should return 500 on error,,passed,1,,
Feedback Controller Whitebox Tests › createFeedback › should create feedback and return the inserted id,,passed,0,,
Feedback Controller Whitebox Tests › createFeedback › should return 500 on error,,passed,1,,
Feedback Controller Whitebox Tests › updateFeedback › should update feedback successfully,,passed,1,,
Feedback Controller Whitebox Tests › updateFeedback › should return 500 on error,,passed,1,,
Feedback Controller Whitebox Tests › deleteFeedback › should delete feedback successfully,,passed,0,,
Feedback Controller Whitebox Tests › deleteFeedback › should return 500 on error,,passed,1,,
Course Controller Whitebox Tests › getAllCourses › should return courses with status 200,,passed,1,,
Course Controller Whitebox Tests › getAllCourses › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › getCourseById › should return course data if found,,passed,1,,
Course Controller Whitebox Tests › getCourseById › should return 404 if course not found,,passed,0,,
Course Controller Whitebox Tests › getCourseById › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › createCourse › should create a course and return 201,,passed,0,,
Course Controller Whitebox Tests › createCourse › should return 500 on error,,passed,1,,
Course Controller Whitebox Tests › updateCourse › should update course and return 200,,passed,0,,
Course Controller Whitebox Tests › updateCourse › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › deleteCourse › should return 400 if creator_id is missing,,passed,0,,
Course Controller Whitebox Tests › deleteCourse › should delete course and return 200 if successful,,passed,1,,
Course Controller Whitebox Tests › deleteCourse › should return 404 if course not found or unauthorized,,passed,0,,
Course Controller Whitebox Tests › deleteCourse › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › getProviderCourses › should return provider courses when creator_id is provided,,passed,1,,
Course Controller Whitebox Tests › getProviderCourses › should return 400 if creator_id is missing,,passed,0,,
Course Controller Whitebox Tests › getProviderCourses › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › getEnrolledStudentsForCourse › should return enrolled students when courseId is provided,,passed,1,,
Course Controller Whitebox Tests › getEnrolledStudentsForCourse › should return 400 if courseId is missing,,passed,0,,
Course Controller Whitebox Tests › getEnrolledStudentsForCourse › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › getEnrolledStudentsForProvider › should return enrolled students for provider when creator_id is provided,,passed,1,,
Course Controller Whitebox Tests › getEnrolledStudentsForProvider › should return 400 if creator_id is missing,,passed,1,,
Course Controller Whitebox Tests › getEnrolledStudentsForProvider › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › addCourseModule › should add a course module and return 201,,passed,1,,
Course Controller Whitebox Tests › addCourseModule › should return 500 on error,,passed,1,,
Course Controller Whitebox Tests › getCourseModules › should return modules when course_id is provided,,passed,1,,
Course Controller Whitebox Tests › getCourseModules › should return 400 if course_id is missing,,passed,0,,
Course Controller Whitebox Tests › getCourseModules › should return 500 on error,,passed,2,,
Course Controller Whitebox Tests › updateCourseModule › should update a module and return 200 if successful,,passed,1,,
Course Controller Whitebox Tests › updateCourseModule › should return 404 if module not found or not updated,,passed,0,,
Course Controller Whitebox Tests › updateCourseModule › should return 500 on error,,passed,1,,
CourseEnrollmentController Whitebox Tests › getAllEnrollments › should return all enrollments with status 200,,passed,1,,
CourseEnrollmentController Whitebox Tests › getAllEnrollments › should return 500 on error,,passed,1,,
CourseEnrollmentController Whitebox Tests › getEnrollmentById › should return enrollment data if found,,passed,1,,
CourseEnrollmentController Whitebox Tests › getEnrollmentById › should return 404 if enrollment not found,,passed,1,,
CourseEnrollmentController Whitebox Tests › getEnrollmentById › should return 500 on error,,passed,1,,
CourseEnrollmentController Whitebox Tests › checkUserEnrollment › should return enrollment status,,passed,1,,
CourseEnrollmentController Whitebox Tests › checkUserEnrollment › should return 500 on error,,passed,1,,
CourseEnrollmentController Whitebox Tests › createEnrollment › should create an enrollment and return 201,,passed,1,,
CourseEnrollmentController Whitebox Tests › createEnrollment › should return 500 on error,,passed,1,,
CourseEnrollmentController Whitebox Tests › updateEnrollment › should update an enrollment and return 200,,passed,0,,
CourseEnrollmentController Whitebox Tests › updateEnrollment › should return 500 on error,,passed,2,,
CourseEnrollmentController Whitebox Tests › deleteEnrollment › should delete an enrollment and return 200,,passed,1,,
CourseEnrollmentController Whitebox Tests › deleteEnrollment › should return 500 on error,,passed,2,,
CourseModuleController Whitebox Tests › getAllModulesForCourse › should return all modules for a course with status 200,,passed,1,,
CourseModuleController Whitebox Tests › getAllModulesForCourse › should return 500 on error,,passed,1,,
CourseModuleController Whitebox Tests › getModuleById › should return module data if found,,passed,1,,
CourseModuleController Whitebox Tests › getModuleById › should return 404 if module is not found,,passed,1,,
CourseModuleController Whitebox Tests › getModuleById › should return 500 on error,,passed,1,,
CourseModuleController Whitebox Tests › createModule › should create a module and return 201,,passed,1,,
CourseModuleController Whitebox Tests › createModule › should return 500 on error,,passed,1,,
CourseModuleController Whitebox Tests › updateModule › should update a module and return 200,,passed,0,,
CourseModuleController Whitebox Tests › updateModule › should return 500 on error,,passed,1,,
CourseModuleController Whitebox Tests › deleteModule › should delete a module and return 200,,passed,1,,
CourseModuleController Whitebox Tests › deleteModule › should return 500 on error,,passed,1,,
CourseReviewController Whitebox Tests › getAllReviewsForCourse › should return reviews for a course with status 200,,passed,0,,
CourseReviewController Whitebox Tests › getAllReviewsForCourse › should return 500 on error,,passed,1,,
CourseReviewController Whitebox Tests › getReviewById › should return review data if found,,passed,1,,
CourseReviewController Whitebox Tests › getReviewById › should return 404 if review not found,,passed,0,,
CourseReviewController Whitebox Tests › getReviewById › should return 500 on error,,passed,1,,
CourseReviewController Whitebox Tests › createReview › should create a review and return 201,,passed,1,,
CourseReviewController Whitebox Tests › createReview › should return 500 on error,,passed,1,,
CourseReviewController Whitebox Tests › updateReview › should update a review and return 200,,passed,0,,
CourseReviewController Whitebox Tests › updateReview › should return 500 on error,,passed,1,,
CourseReviewController Whitebox Tests › deleteReview › should delete a review and return 200,,passed,1,,
CourseReviewController Whitebox Tests › deleteReview › should return 500 on error,,passed,1,,
